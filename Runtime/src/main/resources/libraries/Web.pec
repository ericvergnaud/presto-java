@Inlined
define ClickEvent as native category with bindings:
	
	define category bindings as:
		JavaScript: Event


@Inlined
define MouseEvent as native category with bindings:
	
	define category bindings as:
		JavaScript: Event


@Inlined
define KeyboardEvent as native category with bindings:
	
	define category bindings as:
		JavaScript: Event


@Inlined
define RadioChangedEvent as native category with bindings:

	define category bindings as:
		JavaScript: Event

and methods:
		
	define getSelectedRadio as method returning Text doing:
		JavaScript: return this.target.id;
	

@Inlined
define InputChangedEvent as native category with bindings:

	define category bindings as:
		JavaScript: Event

and methods:
		
	define getCurrentText as method returning Text doing:
		JavaScript: return this.target.defaultValue;
	
	define getProposedText as method returning Text doing:
		JavaScript: return this.target.value;


define ClickEventCallback as abstract method receiving ClickEvent event
define MouseEventCallback as abstract method receiving MouseEvent event
define KeyboardEventCallback as abstract method receiving KeyboardEvent event
define RadioChangedCallback as abstract method receiving RadioChangedEvent event
define InputChangedCallback as abstract method receiving InputChangedEvent event
define DateChangedCallback as abstract method receiving Date value
define ToggleChangedCallback as abstract method receiving Boolean value
define ItemSelectedCallback as abstract method receiving Any value
define PageSelectedCallback as abstract method receiving Integer value
define getReactWidgetProps as native method receiving ReactWidget w returning Document doing:
	JavaScript: return w.props;


define getReactWidgetState as native method receiving ReactWidget w returning Document doing:
	JavaScript: return w.state;


define setReactWidgetState as native method receiving ReactWidget w and Document state doing:
	JavaScript: w.setState(state);


define forceReactWidgetRender as native method receiving ReactWidget w doing:
	JavaScript: w.forceUpdate();


define showReactModal as native method receiving Html dialog doing:
	JavaScript: ReactUtils.showModal(dialog);


define hideReactModal as native method doing:
	JavaScript: ReactUtils.hideModal();


define showReactContextMenu as native method receiving ClickEvent event and Html menu doing:
	JavaScript: ReactUtils.showContextMenu(event, menu);


define hideReactContextMenu as native method doing:
	JavaScript: ReactUtils.hideContextMenu();



@WidgetField(name="state", type=Document)
@WidgetField(name="props", type=Document, isProperties=true)
define ReactWidget as widget with methods:
	
	@Static
	@Callback
	define getDerivedStateFromProps as method receiving Document props and Document state doing:
		return Nothing
		
	@Callback
	define getInitialState as method doing:
		return {}
	
	@Callback
	define componentDidMount as method doing:
		// nothing to do		

	@Callback
	define render as method returning Html doing:
		return <div>Your widget must override render!</div>		

	@Callback
	define componentWillUnmount as method doing:
		// nothing to do		

	@Callback
	define shouldComponentUpdate as method receiving Document nextProps and Document nextState returning Boolean doing:
		return true		

	@Callback
	define getSnapshotBeforeUpdate as method receiving Document prevProps and Document prevState returning Boolean doing:
		return nothing		

	@Callback
	define componentDidUpdate as method receiving Document prevProps, Document prevState and Document snapshot returning Boolean doing:
		// nothing to do

	define getProperties as method doing:
		return getReactWidgetProps self

	define getState as method doing:
		return getReactWidgetState self
	
	define setState as method receiving Document state doing:
		setReactWidgetState self with state

	define forceRender as method doing:
		forceReactWidgetRender self

define WidgetCallback as abstract method receiving any ref

define alert as native method receiving Text text doing:
	JavaScript: alert(text);

define openWindow as native method receiving Text url, Text name = Nothing and Text methodName = "open" doing:
	JavaScript: openWindow(methodName, url, name); from module: prompto/internet/Window.js

@Inlined
define FileRef as native category with bindings:

	define category bindings as:
		JavaScript: FileRef from module: prompto/internet/FileRef.js

and methods: 

	define getName as method returning Text doing:
		JavaScript: return this.file.name;
	
	define getMimeType as method returning Text doing:
		JavaScript: return this.file.type;

	define getSize as method returning Integer doing:
		JavaScript: return this.file.size;

	define readText as method returning Text doing:
		JavaScript: return this.file.text();

	define readImage as method returning Image doing:
		JavaScript: return this.readImage();

	define readBlob as method returning Blob doing:
		JavaScript: return this.readBlob();

define FileRefCallback as abstract method receiving FileRef file
 
define selectFile as native method receiving FileRefCallback callback and Text<> mimeTypes = nothing doing:
	JavaScript: selectFileRef(callback, mimeTypes); from module: prompto/internet/FileRef.js

