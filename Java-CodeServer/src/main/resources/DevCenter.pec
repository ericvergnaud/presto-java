define Module as storable category with attributes name, version, description and image

define Library as Module
define Service as Module
define Script as Module

define entryPoint as storable Text attribute
define Application as Module with attribute entryPoint

define module as storable Module attribute

define lastOpened as storable DateTime attribute
define CodingSession as storable category with attributes user, module and lastOpened
define RecentSession as storable CodingSession

define Declaration as storable category with attributes name, version, methodDialect, methodBody and module

define getRecentModules as method receiving Integer count doing:
	user = getHttpUser
	sessions = fetch RecentSession 1 to count where user = user order by lastOpened desc
	return session.module for each session in sessions

define getAllModules as method doing:
	return fetch all Module order by name

define getModuleDeclarations as method receiving dbId doing:
	user = getHttpUser
	module = fetch one Module where dbId = dbId
	// use this opportunity to keep track of coding sessions
	session = CodingSession with user as user, module as module and now as lastOpened 
	store session
	// use this opportunity to keep track of recent projects
	recent = fetch one mutable RecentSession where user = user and module = module
	if recent is nothing:
		recent = RecentSession with user as user, module as module and now as lastOpened 
	else:
		recent.lastOpened = now 
	store recent
	
	return fetch all Declaration where module = module